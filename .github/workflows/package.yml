name: debuild

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      full:
        description: 'Full rebuild without ccache'
        required: false
        default: 0
      node_version:
        description: 'Node.js version'
        required: false
        default: 16.15.1
      napi_version:
        description: 'node-addon-api version'
        required: false
        default: 5.0.0

jobs:
  ubuntu:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        release:
          - bionic
          - focal
          - jammy

    steps:
    - uses: actions/checkout@v2
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 2000M
        key: ubuntu-${{matrix.release}}
        verbose: 2
    - name: Set fast mode
      run: echo "ARG_FAST=--build-arg FAST=1" >> ${GITHUB_ENV}
      if: github.event.inputs.full == 0
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{secrets.GPG_SIGNING_KEY}}
        git_user_signingkey: true
    - name: Set Node version
      run: |
        NODE_VERSION=${{github.event.inputs.node_version}}
        echo NODE_VERSION=${NODE_VERSION:-"16.15.1"} >> ${GITHUB_ENV}
    - name: Set node-addon-api version
      run: |
        NAPI_VERSION=${{github.event.inputs.napi_version}}
        echo NAPI_VERSION=${NAPI_VERSION:-"5.0.0"} >> ${GITHUB_ENV}
    - name: Create Node.js tarball
      run: |
        mkdir -p node-16.x/dist/
        if [ ! -r node-16.x/dist/node_${NODE_VERSION}.orig.tar.gz ]; then
          wget https://github.com/nodejs/node/archive/refs/tags/v${NODE_VERSION}.tar.gz \
              -O node-16.x/dist/node_${NODE_VERSION}.orig.tar.gz
          tar  -zxvf node-16.x/dist/node_${NODE_VERSION}.orig.tar.gz
          cd node-${NODE_VERSION}
          for SUB in doc clang-format lint-md; do
              ( cd tools/${SUB} && npm ci )
              mv tools/${SUB}/node_modules tools-${SUB}-node-modules
              tar -C tools-${SUB}-node-modules \
                  -Jcvf ../node-16.x/dist/node_${NODE_VERSION}.orig-tools-${SUB}-node-modules.tar.xz .
          done
        fi
    - name: Create node-addon-api tarball
      run: |
        mkdir -p node-addon-api/dist/
        if [ ! -r node-addon-api/dist/node-addon-api_${NAPI_VERSION}.orig.tar.gz ]; then
            wget https://github.com/nodejs/node-addon-api/archive/refs/tags/v${NAPI_VERSION}.tar.gz \
                -O node-addon-api/dist/node-addon-api_${NAPI_VERSION}.orig.tar.gz
        fi
    - name: Prepare build container
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{github.actor}}
        password: "${{secrets.GITHUB_TOKEN}}"
        registry: docker.pkg.github.com
        image_name: libnode-ubuntu-${{matrix.release}}
        image_tag: latest
        context: node-16.x
        build_extra_args:
          ${{env.ARG_FAST}}
          --build-arg RELEASE=${{matrix.release}}
          --build-arg NAPI_VERSION=${{env.NAPI_VERSION}}
          --build-arg NODE_VERSION=${{env.NODE_VERSION}}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}    
    - name: Run build container
      run: |
        mkdir -p ubuntu-${{matrix.release}}-${NODE_VERSION}
        docker run \
          --network none \
          -v `ccache --get-config=cache_dir`:/ccache --env CCACHE_DIR=/ccache \
          -v `pwd`/ubuntu-${{matrix.release}}-${NODE_VERSION}:/out \
          -v ${HOME}/.gnupg:/root/.gnupg \
          docker.pkg.github.com/${{github.actor}}/libnode/libnode-ubuntu-${{matrix.release}}:latest
    - uses: actions/upload-artifact@v3
      with:
        name: ubuntu-${{matrix.release}}-${{env.NODE_VERSION}}
        path: ubuntu-${{matrix.release}}-${{env.NODE_VERSION}}
