name: debuild

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      full:
        description: 'Full rebuild without ccache'
        required: false
        default: 0
      node_version:
        description: 'Node.js version'
        required: false
        default: 16.15.1
      napi_version:
        description: 'node-addon-api version'
        required: false
        default: 5.0.0

jobs:
  ubuntu-binary:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        release:
          - bionic
          - focal
          - jammy

    steps:
    - uses: actions/checkout@v2
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        max-size: 2000M
        key: ubuntu-${{matrix.release}}
    - name: Set fast mode
      run: echo "ARG_FAST=--build-arg FAST=1" >> ${GITHUB_ENV}
      if: github.event.inputs.full == 0
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{secrets.GPG_SIGNING_KEY}}
        git_user_signingkey: true
    - name: Set Node version
      id: node_version
      run: |
        NODE_VERSION=${{github.event.inputs.node_version}}
        echo '::set-output name=value::${NODE_VERSION:-"16.15.1"}'
    - name: Set node-addon-api version
      id: napi_version
      run: |
        NAPI_VERSION=${{github.event.inputs.napi_version}}
        echo '::set-output name=value::${NAPI_VERSION:-"5.0.0"}'
    - name: Prepare build container
      run: |
        docker build ${ARG_FAST} \
          --build-arg RELEASE=${{matrix.release}} \
          --build-arg NODE_VERSION=${{steps.node_version.outputs.value}} \
          --build-arg NAPI_VERSION=${{steps.napi_version.outputs.value}} \
          --build-arg OPERATION="-us -uc" \
          -t mmomtchev/libnode-ubuntu-${{matrix.release}}:latest ubuntu
    - name: Run build container
      run: |
        mkdir -p binary-${{matrix.release}}-${{steps.node_version.outputs.value}}
        docker run -v \
          `ccache --get-config=cache_dir`:/ccache --env CCACHE_DIR=/ccache \
          -v `pwd`/binary-${{matrix.release}}-${{steps.node_version.outputs.value}}:/out \
          -v ${HOME}/.gnupg:/root/.gnupg \
          mmomtchev/libnode-ubuntu-${{matrix.release}}:latest
    - uses: actions/upload-artifact@v3
      with:
        name: binary-${{matrix.release}}-${{steps.node_version.outputs.value}}
        path: binary-${{matrix.release}}-${{steps.node_version.outputs.value}}


  ubuntu-source:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set fast mode
      run: echo "ARG_FAST=--build-arg FAST=1" >> ${GITHUB_ENV}
      if: github.event.inputs.full == 0
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{secrets.GPG_SIGNING_KEY}}
        git_user_signingkey: true
    - name: Set Node version
      id: node_version
      run: |
        NODE_VERSION=${{github.event.inputs.node_version}}
        echo '::set-output name=value::${NODE_VERSION:-"16.15.1"}'
    - name: Set node-addon-api version
      id: napi_version
      run: |
        NAPI_VERSION=${{github.event.inputs.napi_version}}
        echo '::set-output name=value::${NAPI_VERSION:-"5.0.0"}'
    - name: Prepare build container
      run: |
        docker build ${ARG_FAST} \
          --build-arg NODE_VERSION=${{steps.node_version.outputs.value}} \
          --build-arg NAPI_VERSION=${{steps.napi_version.outputs.value}} \
          --build-arg OPERATION="-S" \
          -t mmomtchev/libnode-ubuntu-source:latest ubuntu
    - name: Run build container
      run: |
        mkdir -p source-${{steps.node_version.outputs.value}}
        docker run \
          -v `pwd`/source-${{steps.node_version.outputs.value}}:/out \
          -v ${HOME}/.gnupg:/root/.gnupg \
          mmomtchev/libnode-ubuntu-source:latest
    - uses: actions/upload-artifact@v3
      with:
        name: source-${{steps.node_version.outputs.value}}
        path: source-${{steps.node_version.outputs.value}}
