name: debuild

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      full:
        description: 'Full rebuild without ccache'
        required: false
        default: 0

jobs:
  ubuntu:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        release:
          - bionic
          - focal
          - jammy
        branch:
          - 16
          - 18

    steps:
    - uses: actions/checkout@v2
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 2000M
        key: ubuntu-${{matrix.release}}
        verbose: 2
    - name: Set fast mode
      run: echo "ARG_FAST=--build-arg FAST=1" >> ${GITHUB_ENV}
      if: github.event.inputs.full == 0
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{secrets.GPG_SIGNING_KEY}}
        git_user_signingkey: true
    - name: Set Node version
      run: |
        NODE_PKG_VERSION=`head -1 node-${{matrix.branch}}.x/ubuntu/debian/changelog | cut -f 2 -d "(" | cut -f 1 -d ")" | sed s/UNIVERSAL/${{matrix.release}}/`
        NODE_VERSION=`echo ${NODE_PKG_VERSION} | cut -f 1 -d "-"`
        echo NODE_PKG_VERSION=${NODE_PKG_VERSION} >> ${GITHUB_ENV}
        echo NODE_VERSION=${NODE_VERSION} >> ${GITHUB_ENV}
    - name: Set node-addon-api version
      run: |
        NAPI_PKG_VERSION=`head -1 node-addon-api/ubuntu/debian/changelog | cut -f 2 -d "(" | cut -f 1 -d ")" | sed s/UNIVERSAL/${{matrix.release}}/`
        NAPI_VERSION=`echo ${NAPI_PKG_VERSION} | cut -f 1 -d "-"`
        echo NAPI_PKG_VERSION=${NAPI_PKG_VERSION} >> ${GITHUB_ENV}
        echo NAPI_VERSION=${NAPI_VERSION} >> ${GITHUB_ENV}
    - name: Create Node.js tarball
      run: |
        mkdir -p node-${{matrix.branch}}.x/dist/
        if [ ! -r node-${{matrix.branch}}.x/dist/node_${NODE_VERSION}.orig.tar.gz ]; then
          wget https://launchpad.net/~mmomtchev/+archive/ubuntu/libnode/+sourcefiles/node/${NODE_PKG_VERSION}/node_${NODE_VERSION}.orig.tar.gz \
              -P node-${{matrix.branch}}.x/dist \
            || wget https://github.com/nodejs/node/archive/refs/tags/v${NODE_VERSION}.tar.gz \
              -O node-${{matrix.branch}}.x/dist/node_${NODE_VERSION}.orig.tar.gz
          tar  -zxvf node-${{matrix.branch}}.x/dist/node_${NODE_VERSION}.orig.tar.gz
          wget https://launchpad.net/~mmomtchev/+archive/ubuntu/libnode/+sourcefiles/node/${NODE_PKG_VERSION}/node_${NODE_VERSION}.orig-examples.tar.gz \
              -P node-${{matrix.branch}}.x/dist \
            || tar -C examples -zcvf node-${{matrix.branch}}.x/dist/node_${NODE_VERSION}.orig-examples.tar.gz \
              --exclude-from examples/.gitignore .
          cd node-${NODE_VERSION}
          for SUB in doc clang-format lint-md; do
              ( cd tools/${SUB} && npm ci )
              mv tools/${SUB}/node_modules tools-${SUB}-node-modules
              wget https://launchpad.net/~mmomtchev/+archive/ubuntu/libnode/+sourcefiles/node/${NODE_PKG_VERSION}/node_${NODE_VERSION}.orig-tools-${SUB}-node-modules.tar.xz \
                  -P ../node-${{matrix.branch}}.x/dist \
                || tar -C tools-${SUB}-node-modules \
                  -Jcvf ../node-${{matrix.branch}}.x/dist/node_${NODE_VERSION}.orig-tools-${SUB}-node-modules.tar.xz .
          done
        fi
    - name: Create node-addon-api tarball
      run: |
        mkdir -p node-addon-api/dist/
        if [ ! -r node-addon-api/dist/node-addon-api_${NAPI_VERSION}.orig.tar.gz ]; then
            wget https://github.com/nodejs/node-addon-api/archive/refs/tags/v${NAPI_VERSION}.tar.gz \
                -O node-addon-api/dist/node-addon-api_${NAPI_VERSION}.orig.tar.gz
        fi
    - name: Prepare build container
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{github.actor}}
        password: "${{secrets.GITHUB_TOKEN}}"
        registry: docker.pkg.github.com
        image_name: libnode-ubuntu-${{matrix.release}}
        image_tag: latest
        context: node-${{matrix.branch}}.x
        build_extra_args:
          ${{env.ARG_FAST}}
          --build-arg RELEASE=${{matrix.release}}
          --build-arg NAPI_VERSION=${{env.NAPI_VERSION}}
          --build-arg NODE_VERSION=${{env.NODE_VERSION}}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}    
    - name: Run build container
      run: |
        mkdir -p ubuntu-${{matrix.release}}-${NODE_VERSION}
        docker run \
          --network none \
          -v `ccache --get-config=cache_dir`:/ccache --env CCACHE_DIR=/ccache \
          -v `pwd`/ubuntu-${{matrix.release}}-${NODE_VERSION}:/out \
          -v ${HOME}/.gnupg:/root/.gnupg \
          docker.pkg.github.com/${{github.actor}}/libnode/libnode-ubuntu-${{matrix.release}}:latest
    - uses: actions/upload-artifact@v3
      with:
        name: ubuntu-${{matrix.release}}-${{env.NODE_VERSION}}
        path: ubuntu-${{matrix.release}}-${{env.NODE_VERSION}}
